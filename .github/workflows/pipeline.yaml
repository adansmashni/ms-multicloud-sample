name: Pipeline Azure

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USER }}/tcc-senai:latest .
        docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}
        docker push ${{ secrets.DOCKERHUB_USER }}/tcc-senai:latest

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true

    - name: Azure AKS Set Context
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: ${{ secrets.AZ_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AZ_AKS }}

    - name: Create NS tcc-senai
      continue-on-error: true
      run: |
        kubectl create ns tcc-senai

    - name: Create DockerHub Credentials
      continue-on-error: true
      run: |
        kubectl create secret docker-registry dockerhub-credentials \
          --docker-server=https://index.docker.io/v1/ \
          --docker-username=${{ secrets.DOCKERHUB_USER }} \
          --docker-password=${{ secrets.DOCKERHUB_TOKEN }} \
          --docker-email=$DOCKERHUB_EMAIL \
          --namespace=tcc-senai

    - name: Deploy to AKS
      run: |
        kubectl apply -f kubernetes/deployment.yaml
        kubectl rollout restart deployment tcc-senai -n tcc-senai 
